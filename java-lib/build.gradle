plugins {
    id 'java-library'
    id 'org.graalvm.buildtools.native' version '0.9.27' // 0.10.6
}

repositories {
    mavenCentral()
    maven { url 'https://jars.sogeo.services/mirror' }
}

dependencies {
    testImplementation libs.junit.jupiter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    compileOnly 'org.graalvm.nativeimage:svm:21.3.14'
    
    api libs.ili2c.core
    api libs.ili2c.tool
    api libs.iox.ili
    api libs.ehibasics
}

sourceCompatibility = '21'
targetCompatibility = '21'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

graalvmNative {
    binaries {
        main {
            imageName = 'libili2c'
            debug = false
            verbose = true
            fallback = false
            sharedLibrary = true
            richOutput = true

            buildArgs.add('--enable-url-protocols=http,https')
            buildArgs.add("-H:+AllowDeprecatedBuilderClassesOnImageClasspath")
            // https://www.graalvm.org/latest/reference-manual/native-image/optimizations-and-performance/
            buildArgs.add('-Ob') 
        }
        /*
        test {
            verbose = true
            fallback = false
            buildArgs.add('--enable-url-protocols=http,https')
        }
        */
    }
}

tasks.register('deleteSharedLibs', Delete) {
   delete files("../module/lib_ext")
}

def osName = System.getProperty("os.name").toLowerCase()

tasks.register('copySharedLibs', Copy) {
    dependsOn 'deleteSharedLibs'
    from ('build/native/nativeCompile') {
        include '*.h'
        include '*.lib'
        include '*.so'
        include '*.dll'
        include '*.dylib'
    }
    into "../module/lib_ext/$osName"
}
nativeCompile.finalizedBy(copySharedLibs)
